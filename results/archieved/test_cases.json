[
    {
        "test_name": "Get customer without name parameter",
        "request": {
            "method": "GET",
            "path": "/customer",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": true
                },
                "address": "",
                "email": "",
                "name": "",
                "password": "",
                "phone": ""
            }
        }
    },
    {
        "test_name": "Get customer with valid name parameter",
        "request": {
            "method": "GET",
            "path": "/customer",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "John Doe"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "address": "123 Main St",
                "email": "john.doe@example.com",
                "name": "John Doe",
                "password": "securePass1",
                "phone": "+123 456 789 00 11"
            }
        }
    },
    {
        "test_name": "Get customer with invalid name parameter",
        "request": {
            "method": "GET",
            "path": "/customer",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "Invalid@Name"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 404,
            "body": {}
        }
    },
    {
        "test_name": "Get cart with no query parameters",
        "request": {
            "method": "GET",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "cartItems": [],
                "deliveryCost": 0,
                "deliveryIncluded": false,
                "empty": true,
                "productsCost": 0.0,
                "totalCost": 0.0,
                "totalItems": 0,
                "user": ""
            }
        }
    },
    {
        "test_name": "Get cart with a specific user name",
        "request": {
            "method": "GET",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "JohnDoe"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "cartItems": [
                    {
                        "_links": {
                            "empty": false
                        },
                        "productId": 1,
                        "quantity": 2
                    }
                ],
                "deliveryCost": 5,
                "deliveryIncluded": true,
                "empty": false,
                "productsCost": 50.0,
                "totalCost": 55.0,
                "totalItems": 1,
                "user": "JohnDoe"
            }
        }
    },
    {
        "test_name": "Get cart unauthorized access",
        "request": {
            "method": "GET",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 401,
            "body": {}
        }
    },
    {
        "test_name": "Add item to cart successfully",
        "request": {
            "method": "PUT",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "Test Item",
                "_links": [],
                "productId": 123,
                "quantity": 2
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "totalItems": 1,
                "totalCost": 29.99,
                "cartItems": [
                    {
                        "productId": 123,
                        "quantity": 2
                    }
                ]
            }
        }
    },
    {
        "test_name": "Unauthorized access when adding item to cart",
        "request": {
            "method": "PUT",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "_links": [],
                "productId": 456,
                "quantity": 1
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 401,
            "body": {}
        }
    },
    {
        "test_name": "Add item to cart with invalid product ID",
        "request": {
            "method": "PUT",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "_links": [],
                "productId": -1,
                "quantity": 1
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 404,
            "body": {}
        }
    },
    {
        "test_name": "Clear cart successfully without parameters",
        "request": {
            "method": "DELETE",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "empty": true,
                "totalItems": 0,
                "cartItems": [],
                "deliveryCost": 0,
                "deliveryIncluded": false,
                "productsCost": 0,
                "totalCost": 0,
                "user": "",
                "_links": {
                    "empty": true
                }
            }
        }
    },
    {
        "test_name": "Clear cart with user parameter",
        "request": {
            "method": "DELETE",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "testUser"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "empty": true,
                "totalItems": 0,
                "cartItems": [],
                "deliveryCost": 0,
                "deliveryIncluded": false,
                "productsCost": 0,
                "totalCost": 0,
                "user": "testUser",
                "_links": {
                    "empty": true
                }
            }
        }
    },
    {
        "test_name": "Clear cart and expect no content response",
        "request": {
            "method": "DELETE",
            "path": "/customer/cart",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 204,
            "body": {}
        }
    },
    {
        "test_name": "Set delivery with included true",
        "request": {
            "method": "PUT",
            "path": "/customer/cart/delivery",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "included": true,
                "name": "Express Delivery"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "deliveryIncluded": true,
                "totalCost": 50.0,
                "empty": false,
                "totalItems": 3,
                "user": "test_user"
            }
        }
    },
    {
        "test_name": "Set delivery with included false",
        "request": {
            "method": "PUT",
            "path": "/customer/cart/delivery",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "included": false
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "deliveryIncluded": false,
                "totalCost": 30.0,
                "empty": false,
                "totalItems": 2,
                "user": "test_user"
            }
        }
    },
    {
        "test_name": "Unauthorized access",
        "request": {
            "method": "PUT",
            "path": "/customer/cart/delivery",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "included": true
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 401,
            "body": {}
        }
    },
    {
        "test_name": "Successful payment with valid card number",
        "request": {
            "method": "POST",
            "path": "/customer/cart/pay",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "card": {
                    "ccNumber": "4111111111111111"
                }
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 201,
            "body": {
                "billNumber": 123456,
                "dateCreated": "2023-10-01T12:00:00Z",
                "deliveryCost": 5,
                "deliveryIncluded": true,
                "executed": true,
                "id": 1,
                "payed": true,
                "productsCost": 50.0,
                "totalCost": 55.0,
                "userAccount": "user@example.com",
                "_links": {
                    "empty": false
                }
            }
        }
    },
    {
        "test_name": "Unauthorized access without valid token",
        "request": {
            "method": "POST",
            "path": "/customer/cart/pay",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "card": {
                    "ccNumber": "4111111111111111"
                }
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 401,
            "body": {}
        }
    },
    {
        "test_name": "Payment with invalid card number format",
        "request": {
            "method": "POST",
            "path": "/customer/cart/pay",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "card": {
                    "ccNumber": "12345"
                }
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 403,
            "body": {}
        }
    },
    {
        "test_name": "Get all contacts without query parameter",
        "request": {
            "method": "GET",
            "path": "/customer/contacts",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "address": "123 Main St",
                "phone": "+123 456 789 01 23"
            }
        }
    },
    {
        "test_name": "Get contacts with name query parameter",
        "request": {
            "method": "GET",
            "path": "/customer/contacts",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "John Doe"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "address": "456 Elm St",
                "phone": "+987 654 321 00 11"
            }
        }
    },
    {
        "test_name": "Unauthorized access to contacts",
        "request": {
            "method": "GET",
            "path": "/customer/contacts",
            "headers": {
                "Authorization": "Bearer invalid_token",
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 401,
            "body": {}
        }
    },
    {
        "test_name": "Forbidden access to contacts",
        "request": {
            "method": "GET",
            "path": "/customer/contacts",
            "headers": {
                "Authorization": "Bearer no_access_token",
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 403,
            "body": {}
        }
    },
    {
        "test_name": "Not Found for non-existent endpoint",
        "request": {
            "method": "GET",
            "path": "/customer/nonexistent",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 404,
            "body": {}
        }
    },
    {
        "test_name": "Update contacts with valid data",
        "request": {
            "method": "PUT",
            "path": "/customer/contacts",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "_links": [
                    {
                        "href": "http://example.com/contact/1",
                        "rel": {
                            "title": "LinkRelation"
                        },
                        "title": "Contact 1"
                    }
                ],
                "address": "123 Main St",
                "phone": "+123 456 789 00"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "address": "123 Main St",
                "phone": "+123 456 789 00"
            }
        }
    },
    {
        "test_name": "Update contacts with invalid phone format",
        "request": {
            "method": "PUT",
            "path": "/customer/contacts",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "_links": [],
                "address": "456 Elm St",
                "phone": "invalid_phone"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 400,
            "body": {
                "error": "Invalid phone format"
            }
        }
    },
    {
        "test_name": "Update contacts with missing required field",
        "request": {
            "method": "PUT",
            "path": "/customer/contacts",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "_links": [],
                "address": "789 Oak St"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 400,
            "body": {
                "error": "Phone number is required"
            }
        }
    },
    {
        "test_name": "Get orders without query parameter",
        "request": {
            "method": "GET",
            "path": "/customer/orders",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "items": []
            }
        }
    },
    {
        "test_name": "Get orders with valid name query parameter",
        "request": {
            "method": "GET",
            "path": "/customer/orders",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "John Doe"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "items": [
                    {
                        "_links": {
                            "empty": false
                        },
                        "billNumber": 12345,
                        "dateCreated": "2023-10-01T12:00:00Z",
                        "deliveryCost": 5,
                        "deliveryIncluded": true,
                        "executed": true,
                        "id": 1,
                        "payed": true,
                        "productsCost": 50.0,
                        "totalCost": 55.0,
                        "userAccount": "john.doe@example.com"
                    }
                ]
            }
        }
    },
    {
        "test_name": "Get orders with unauthorized access",
        "request": {
            "method": "GET",
            "path": "/customer/orders",
            "headers": {
                "Authorization": "Bearer invalid_token",
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 401,
            "body": {}
        }
    },
    {
        "test_name": "Get order with valid orderId",
        "request": {
            "method": "GET",
            "path": "/customer/orders/12345",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "billNumber": 98765,
                "dateCreated": "2023-10-01T12:00:00Z",
                "deliveryCost": 5,
                "deliveryIncluded": true,
                "executed": false,
                "id": 12345,
                "payed": true,
                "productsCost": 50.0,
                "totalCost": 55.0,
                "userAccount": "user@example.com"
            }
        }
    },
    {
        "test_name": "Get order with non-existent orderId",
        "request": {
            "method": "GET",
            "path": "/customer/orders/99999",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 404,
            "body": {}
        }
    },
    {
        "test_name": "Get order without required orderId",
        "request": {
            "method": "GET",
            "path": "/customer/orders/",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 404,
            "body": {}
        }
    },
    {
        "test_name": "Get order with valid orderId and query parameter",
        "request": {
            "method": "GET",
            "path": "/customer/orders/12345",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "name": "John Doe"
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "_links": {
                    "empty": false
                },
                "billNumber": 98765,
                "dateCreated": "2023-10-01T12:00:00Z",
                "deliveryCost": 5,
                "deliveryIncluded": true,
                "executed": false,
                "id": 12345,
                "payed": true,
                "productsCost": 50.0,
                "totalCost": 55.0,
                "userAccount": "user@example.com"
            }
        }
    },
    {
        "test_name": "Get all products successfully",
        "request": {
            "method": "GET",
            "path": "/products",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": [
                {
                    "_links": {
                        "empty": false
                    },
                    "age": 5,
                    "alcohol": 40.0,
                    "available": true,
                    "description": "A fine whiskey.",
                    "distillery": "Whiskey Distillery",
                    "name": "Fine Whiskey",
                    "price": 50.0,
                    "productId": 1,
                    "volume": 750
                }
            ]
        }
    },
    {
        "test_name": "Unauthorized access",
        "request": {
            "method": "GET",
            "path": "/products",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 401,
            "body": {}
        }
    },
    {
        "test_name": "Forbidden access",
        "request": {
            "method": "GET",
            "path": "/products",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 403,
            "body": {}
        }
    },
    {
        "test_name": "Get product with valid productId",
        "request": {
            "method": "GET",
            "path": "/products/1",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 200,
            "body": {
                "alcohol": 40.0,
                "price": 25.99,
                "volume": 750,
                "productId": 1,
                "name": "Product Name",
                "description": "Product Description",
                "distillery": "Distillery Name",
                "available": true,
                "age": 5,
                "_links": {
                    "empty": false
                }
            }
        }
    },
    {
        "test_name": "Get product with non-existent productId",
        "request": {
            "method": "GET",
            "path": "/products/9999",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 404,
            "body": {}
        }
    },
    {
        "test_name": "Get product without productId",
        "request": {
            "method": "GET",
            "path": "/products/",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {},
            "query": {}
        },
        "expected_response": {
            "status_code": 404,
            "body": {}
        }
    },
    {
        "test_name": "Successful customer registration",
        "request": {
            "method": "POST",
            "path": "/register",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "user": {
                    "_links": [],
                    "address": "123 Main St",
                    "email": "test@example.com",
                    "name": "John Doe",
                    "password": "Password1",
                    "phone": "+123 456 789 00"
                }
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 201,
            "body": {
                "address": "123 Main St",
                "email": "test@example.com",
                "name": "John Doe",
                "phone": "+123 456 789 00",
                "_links": {
                    "empty": true
                }
            }
        }
    },
    {
        "test_name": "Email format validation failure",
        "request": {
            "method": "POST",
            "path": "/register",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "user": {
                    "_links": [],
                    "address": "123 Main St",
                    "email": "invalid-email",
                    "name": "Jane Doe",
                    "password": "Password1",
                    "phone": "+123 456 789 00"
                }
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 403,
            "body": {}
        }
    },
    {
        "test_name": "Password length validation failure",
        "request": {
            "method": "POST",
            "path": "/register",
            "headers": {
                "Content-Type": "application/json"
            },
            "body": {
                "user": {
                    "_links": [],
                    "address": "123 Main St",
                    "email": "test@example.com",
                    "name": "John Doe",
                    "password": "short",
                    "phone": "+123 456 789 00"
                }
            },
            "query": {}
        },
        "expected_response": {
            "status_code": 403,
            "body": {}
        }
    }
]